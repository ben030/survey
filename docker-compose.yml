services:
  mysql-container:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'db'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - my-db:/var/lib/mysql
    networks:
      survey-network:
        aliases:
          - db-container
  rabbitmq:
    image: rabbitmq:management
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      survey-network:
        aliases:
          - mq-container
  surveywebapi:
    container_name: surveywebapi
    restart: always
    build:
      context: SurveyWebAPI
      dockerfile: Dockerfile    
    image: surveywebapi:latest
    ports:
      - 8080:8080
    networks:
      survey-network:
        aliases:
          - surveywebapi
  surveydbsaver:
    container_name: surveydbsaver
    restart: always
    build:
      context: SurveyDBSaver
      dockerfile: Dockerfile    
    image: surveydbsaver:latest
    ports:
      - 8081:8081
    networks:
      survey-network:
        aliases:
          - surveydbsaver
  nginx:
    container_name: survey-nginx
    image: nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
    networks:
      - survey-network   
networks:
  survey-network:
    driver: bridge
# Names our volume
volumes:
  my-db:
